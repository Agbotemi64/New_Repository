AWSTemplateFormatVersion: 2010-09-09
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: 10.0.0.0/24
      Tags:
        - Key: Name
          Value: VPC01
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 7361599e-573a-4b53-ac98-4e636ecd3fbc
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: IntGW01
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 1ddb70a1-ac13-4e31-afdc-de0d9704cc9d
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
    Metadata:
      'AWS::CloudFormation::Designer':
        id: cc5e19b0-2dd8-4927-bdf8-14d5ec846b62
Metadata:
  'AWS::CloudFormation::Designer':
    1ddb70a1-ac13-4e31-afdc-de0d9704cc9d:
      size:
        width: 60
        height: 60
      position:
        x: 270
        'y': 90
      z: 1
      embeds: []
    7361599e-573a-4b53-ac98-4e636ecd3fbc:
      size:
        width: 150
        height: 150
      position:
        x: 30
        'y': 120
      z: 1
      embeds: []
    cc5e19b0-2dd8-4927-bdf8-14d5ec846b62:
      source:
        id: 7361599e-573a-4b53-ac98-4e636ecd3fbc
      target:
        id: 1ddb70a1-ac13-4e31-afdc-de0d9704cc9d
#this is a subnet
Description: Subnets.
Parameters:
  NetworkStackNameParameter:
    Type: String
Resources:
  Subnet01:
    Type: 'AWS::EC2::Subnet'
    DeletionPolicy: Delete
    Properties:
      VpcId: !ImportValue 
        'Fn::Sub': '${NetworkStackNameParameter}-VPCID'
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: Subnet-01
  Subnet02:
    Type: 'AWS::EC2::Subnet'
    DeletionPolicy: Delete
    Properties:
      VpcId: !ImportValue 
        'Fn::Sub': '${NetworkStackNameParameter}-VPCID'
      CidrBlock: 10.0.0.0/us-east-1a
      AvailabilityZone: us-east-1b
      Tags:
        - Key: Name
          Value: Subnet-02
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !ImportValue 
        'Fn::Sub': '${NetworkStackNameParameter}-VPCID'
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !ImportValue 
        'Fn::Sub': '${NetworkStackNameParameter}-InternetGateway'
  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet01
      RouteTableId: !Ref PublicRouteTable
#Security groups
AWSTemplateFormatVersion: 2010-09-09
Description: Subnets.
Parameters:
  NetworkStackNameParameter:
    Type: String
Resources:
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP ingress
      VpcId: !ImportValue 
        'Fn::Sub': '${NetworkStackNameParameter}-VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: WebSecurityGroup
#This is the #ec2 instances
Description: EC2 instances.
Parameters:
  VPC:
    Type: String
  SUBNETS:
    Type: String
  SecurityGroup:
    Type: String
Resources:
  WebServer01:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId:  ami-061ac2e015473fbe2
      KeyName: cf-keypair-1
      Tags:
        - Key: Name
          Value: 
      NetworkInterfaces:
        - DeviceIndex: '0'
          GroupSet:
            - !ImportValue 
              'Fn::Sub': '${SecurityGroup}-WebServerSecurityGroup'
          SubnetId: !ImportValue 
            'Fn::Sub': '${SUBNETS}-Subnet01'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: fc33911e-cd3b-496b-9975-a77684964fee
  WebServer02:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: ami-061ac2e015473fbe2
      KeyName: cf-keypair-2
      Tags:
        - Key: Name
          Value: WebServer02
      NetworkInterfaces:
        - DeviceIndex: '0'
          GroupSet:
            - !ImportValue 
              'Fn::Sub': '${SecurityGroup}-WebServerSecurityGroup'
          SubnetId: !ImportValue 
            'Fn::Sub': '${SUBNETS}-Subnet02'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: e0d44d1a-18b1-47db-92b2-71a9376bce33

    Metadata:
      'AWS::CloudFormation::Designer':
        id: f646646c-aa3f-4fec-9252-9eb16f19266a
#This is the application loadbalancer
Description: Application Loadbalancer.
Parameters:
  VPC:
    Type: String
  SUBNETS:
    Type: String
  SecurityGroup:
    Type: String
  WebServers:
    Type: String
Resources:
  ApplicationLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Subnets:
        - !ImportValue 
          'Fn::Sub': '${SUBNETS}-Subnet01'
        - !ImportValue 
          'Fn::Sub': '${SUBNETS}-Subnet02'
      Name: ALB01
      SecurityGroups:
        - !ImportValue 
          'Fn::Sub': '${SecurityGroup}-WebServerSecurityGroup'
  ALBListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: '80'
      Protocol: HTTP
  ALBTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: !ImportValue 
        'Fn::Sub': '${VPC}-VPCID'
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: 'true'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '30'
      Targets:
        - Id: !ImportValue 
            'Fn::Sub': '${WebServers}-WebServer01'
          Port: 80
        - Id: !ImportValue 
            'Fn::Sub': '${WebServers}-WebServer02'
          Port: 80